select * from Customers;
select * from orders;
select * from Products;
select * from suppliers;
select * from orderdetails;

drop table customers;
-- Create the Customers table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(100),
    Email VARCHAR(100),
    Country VARCHAR(50),
    RegistrationDate DATE,
    PhoneNumber VARCHAR(15)
);
-- Insert values into the Customers table
INSERT INTO Customers (CustomerID, Name, Email, Country, RegistrationDate, PhoneNumber)
VALUES
(1, 'Alice Green', 'alice.green@mail.com', 'USA', '2023-01-15', '1234567890'),
(2, 'Bob Brown', 'bob.brown@mail.com', 'Canada', '2023-03-10', '2345678901'),
(3, 'Charlie Gray', 'charlie.gray@mail.com', 'India', '2023-02-05', '3456789012'),
(4, 'Diana White', 'diana.white@mail.com', 'UK', '2023-04-20', '4567890123'),
(5, 'Ethan Black', 'ethan.black@mail.com', 'USA', '2023-06-01', '5678901234');







-- Q Retrive all customers details 
select * from Customers;

-- Q List all the products priced above 
select *
from products
where price >100;

-- Q Find all customers from USA
select * from customers
where country = 'USA';

-- Q List all the products in the electronics category
select * from products
where category='Electronics';

-- Q List all orders along with customer names
select o.orderID, o.OrderDate,c.Name 
from orders o
join Customers c ON o.CustomerID =c.CustomerID;


-- Q find products purchased in each other with customer details 
SELECT 
    o.OrderID, 
    c.Name AS CustomerName, 
    p.Name AS ProductName, 
    od.Quantity, 
    od.Subtotal
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
JOIN Customers c ON o.CustomerID = c.CustomerID;

-- Q List suppliers and the products tey supply
SELECT 
    s.Name AS SupplierName, 
    p.Name AS ProductName
FROM Suppliers s
JOIN Products p ON s.SupplierID = p.SupplierID;

-- Q Find customer who purchased products from the furniture category
select DISTINCT c.Name
from Customer C
Join Orders o On c.CustomerID = o.CustomerID
join OrderDetails od on o.OrderID = od.OrderID
join products p on od.ProductID = p.ProductID
join products p on od.ProductID =p.ProductID
where p.Category='Furniture';

-- Q Calculate the total revenue generated by the store 
Select sum(TotalAmount) AS  TotalRevenue 
from orders ;

-- Q Find the total number of product sold
select sum(Quantity) as TotalProductSold 
from OrderDetails; 

-- Q find the catefory with highest sales
select  p.category , sum(od.Subtotal) as Totalsales
from orderdetails od
join products p on od.productID = p.ProductID
group  by p.category
order by TotalSales Desc
limit 1;

-- Q count the number of order placed by each customer
select c.Name , count(o.OrderID)  as Ordercount
from Customers c
join Orders o on c.CustomerID = o.CustomerID
group by c.Name;

-- Q Calculate the average order value
select avg(TotalAmount) as AverageOrderValue from Orders;

-- Q Find the customers who placed orders worth more than 500
select Name 
from Customers
where CustomerID in(
	 Select CustomerID
     from Orders
     where TotalAmount >500);
     
-- Q calculate the average order value
select AVG(TotalAmount) as AverageOrderValues
from Orders;

-- Q Find Customers who placed orders worth more then 500
select name 
from Customers 
where CustomerID in(
  Select CustomerID
  From orders
  where TotalAmount >500) ;
  
  -- Q List Products with stock below the average stock 
  Select * 
  From Products
  Where Stock < (Select AVG(Stock) From Products);
  
  -- Q find the most expensive product
  Select *
  from Products
  where Price = ( Select max(price) from Products);
  
-- Q Increase the price of all products in the electronics category by 10 %
Update Products
set Price = Price*1.10
where category = 'Electronics';

-- Q Reduce the stock of products based on orders
update products
set Stock = Stock -(
  select COALESCE(sum(quantity),0)
  from OrderDetails od
  where Products.ProductID =od.ProductID)
  where ProductID in (Select ProductID from OrderDetails);
  
  -- Q find the  total amount spend on each customer
  select c.name,sum(o.TotalAmount) as TotalSpend
  from Customers c
  join orders o on c.CustomerID = o.CustomerID
  group by c . name;
  
  
-- Q list all products that have never been purchase 
select *
from products
 where ProductID NOT IN ( select distinct ProductID from 
 orderdetails);

-- Q find the top 3 customers based on total spending
select c.name , sum(o.totalamount) as totalspent
from customers c
join orders o on c.CustomerID = o.CustomerID
group by c.name 
order by totalspent desc
limit 3 ;

-- Q find the product that generated the highest revenue
select p.name , sum(od.Subtotal) as revenue
from orderdetails od 
join products p on od.ProductID = p.ProductID
group by p.name
order by revenue Desc
limit 1;

-- Q Identify supplier with products that have stock below 20 units 
select s.name as suppliername, p.name  as productname ,p.stock
from suppliers s
join products p on s.SupplierID = p.SupplierID
where p.stock <20 ;

-- Q list customers who have not placed any orders
select *
from customers
where customerid not in ( select distinct customerid from
orders);

-- find the most frequently purchased product
select p.name, sum(od.Quantity) as Totalquantity 
from orderdetails od 
join products p on od.ProductID=p.ProductID
group by p.name
order by totalquantity desc
limit 1;

-- Q calculate the total sales for each product category
select p.category, sum(od.subtotal) as totalsales
from orderdetails od
join products p on od.productid = p.productid
group by p.Category;

-- Q list all customer who placed more than one order
select c.name 
from customers c
join orders o on c.customerid =o.customerid
group by c.name
having count(o.orderid)>1;

-- Q Find the month with the higest revenue in 2023
SELECT MONTH(orderdate) AS Month, SUM(totalamount) AS Revenue
FROM orders
WHERE YEAR(orderdate) = 2023
GROUP BY MONTH(orderdate)
ORDER BY Revenue DESC
LIMIT 1;

-- Q for each order list the customer name , product names and total order amount
SELECT 
    o.OrderID, 
    c.Name AS CustomerName, 
    GROUP_CONCAT(p.Name) AS Products, 
    o.TotalAmount
FROM 
    Orders o
JOIN 
    Customers c ON o.CustomerID = c.CustomerID
JOIN 
    OrderDetails od ON o.OrderID = od.OrderID
JOIN 
    Products p ON od.ProductID = p.P
GROUP BY 
    o.OrderID;

-- Q find the average spending of customers by country
select c.Country,Avg(o.TotalAmount) as abgspending
from customer c
join orders o on c.customerid =o.customerid
group by c.country;





